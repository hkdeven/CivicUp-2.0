angular.module("app").controller("AccountController",["AccountService","$window","$document","$scope","$rootScope","$stateParams",function(AccountService,$window,$document,$scope,$rootScope,$stateParams){$scope.login=function(){AccountService.login()},$scope.logout=function(){AccountService.logout()},angular.element($window).bind("scroll",function(){$window.scrollY<4?$scope.show=!0:$scope.show=!1,$scope.$apply()}),$rootScope.$on("$viewContentLoading",function(event,viewConfig){$scope.state=viewConfig.view.self.name,$document[0].body.scrollTop=$document[0].documentElement.scrollTop=0})}]),angular.module("app").controller("QuestionDetailsController",["QuestionService","$scope","$rootScope","$state","$stateParams","$stamplay",function(QuestionService,$scope,$rootScope,$state,$stateParams,$stamplay){function renderQuestion(question){$scope.loading=!1,$scope.question=question,$scope.comments=question.actions.comments,void 0!==question.solution_id&&question.solution_id.length>0?($scope.solution=question.solution_id[0],$scope.voteTotal=calcVotes($scope.solution)):$scope.no_solution=!0,setTimeout(function(){Prism.highlightAll()},500)}function calcVotes(solution){return solution.actions.votes.users_upvote.length-solution.actions.votes.users_downvote.length}$scope.tab="question",$scope.loading=!0,$stateParams.id||$state.go("Home"),QuestionService.getQuestionDetails($stateParams.id).then(function(question){QuestionService.updateViewCount(question),renderQuestion(question)}),$scope.updateQuestion=function(){$scope.loading=!0,$scope.hide_question=!$scope.hide_question,QuestionService.updateQuestion($scope.question).then(function(res){renderQuestion(res)})},$scope.deleteSolution=function(){$scope.loading=!0,QuestionService.deleteSolution($scope.solution,$scope.question._id).then(function(res){$scope.no_solution=!0,$scope.loading=!1,$scope.solution={}})},$scope.addOrUpdateSolution=function(solution){$scope.hide_solution=!1,$scope.loading=!0,solution.hasOwnProperty("_id")?QuestionService.updateSolution(solution,$scope.question._id).then(function(res){$scope.question=res,$scope.solution=res.solution_id[0],$scope.voteTotal=$scope.solution.actions.votes.users_upvote.length-$scope.solution.actions.votes.users_downvote.length,$scope.no_solution=!1,$scope.loading=!1}):QuestionService.addSolution(solution,$scope.question._id).then(function(res){$scope.question=res,$scope.solution=res.solution_id[0],$scope.voteTotal=$scope.solution.actions.votes.users_upvote.length-$scope.solution.actions.votes.users_downvote.length,$scope.no_solution=!1,$scope.loading=!1})},$scope.upvote=function(question){$stamplay.Object("solution").upVote(question._id).then(function(res){$scope.voteTotal=calcVotes(res),$scope.$apply()})},$scope.downvote=function(question){$stamplay.Object("solution").downVote(question._id).then(function(res){$scope.voteTotal=calcVotes(res),$scope.$apply()})},$scope.addComment=function(question,comment){$stamplay.Object("question").comment(question._id,comment).then(function(res){$scope.comments=res.actions.comments,$scope.show_comment=!1,$scope.comment="",$scope.$apply(),setTimeout(function(){Prism.highlightAll()},500)})},$scope.tinymceOptions={plugins:["codesample fullscreen preview"],toolbar1:"insertfile undo redo | styleselect | codesample fullscreen | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image",theme:"modern",content_css:".././dist/css/lib/prism.min.css",min_height:200,inline:!0}}]),angular.module("app").controller("HomeController",["$scope","$state","$stamplay","QuestionService",function($scope,$state,$stamplay,QuestionService){function renderQuestions(res){$scope.loading=!1,$scope.questionCollection=res.data,$scope.pagination=res.pagination,$scope.pages=[];var start,page=res.pagination.page,total=res.pagination.total_pages,stop=total<5?total:5;start=page<=2&&page>0||total<5?1:page>=3&&page<=total-2?page-2:total-4;for(var b=0,i=start;b<stop;i+=1)$scope.pages.push(i),b+=1}$scope.per_page="10",$scope.sortby="-dt_create",$scope.getQuestions=function(page,per_page,sortby){$scope.loading=!0,QuestionService.getQuestions(page,per_page,sortby).then(function(res){renderQuestions(res)})},$scope.searchQuestions=function(page,per_page,sortby,question_query){$scope.loading=!0,QuestionService.searchQuestions(page,per_page,sortby,question_query).then(function(res){renderQuestions(res)})},$scope.paginate=function(page,per_page,sortby,question_query){$scope.pagination.page=page,question_query.length>0?$scope.searchQuestions(page,per_page,sortby,question_query):$scope.getQuestions(page,per_page,sortby)},$scope.getQuestions(1,$scope.per_page,$scope.sortby)}]),angular.module("app").controller("SlackInviteController",["$scope","$stamplay",function($scope,$stamplay){$scope.request_invite=function(){$stamplay.Object("invite").save({email:$scope.email}).then(function(response){alert("Check your inbox - your invite is waiting.")},function(err){}),$scope.email=""}}]),angular.module("app").controller("CreateQuestionController",["QuestionService","$scope","$rootScope","$state",function(QuestionService,$scope,$rootScope,$state){$rootScope.currentUser||$state.go("Home"),$scope.submitQuestion=function(){$scope.loading=!0,QuestionService.newQuestion($scope.question).then(function(question){$scope.loading=!1,$state.go("Home")})},$scope.tinymceOptions={plugins:["codesample fullscreen preview"],toolbar1:"insertfile undo redo | styleselect | codesample fullscreen | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image",theme:"modern",content_css:".././dist/css/lib/prism.min.css",min_height:200}}]);